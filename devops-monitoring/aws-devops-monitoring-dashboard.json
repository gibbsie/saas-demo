{
  "Description": "(SO0143) AWS DevOps Monitoring Dashboard - Main Template. Version: v1.1.0",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Metrics Configuration"
          },
          "Parameters": [
            "DataDuration",
            "CodeCommitRepo"
          ]
        },
        {
          "Label": {
            "default": "S3 Configuration"
          },
          "Parameters": [
            "S3TransitionDays"
          ]
        },
        {
          "Label": {
            "default": "QuickSight Configuration"
          },
          "Parameters": [
            "QuickSightPrincipalArn"
          ]
        }
      ],
      "ParameterLabels": {
        "DataDuration": {
          "default": "Athena Query Data Duration (Days)"
        },
        "CodeCommitRepo": {
          "default": "AWS CodeCommit Repository List"
        },
        "QuickSightPrincipalArn": {
          "default": "Amazon Quicksight Principal ARN"
        },
        "S3TransitionDays": {
          "default": "S3 Transition Days"
        }
      }
    }
  },
  "Parameters": {
    "CodeCommitRepo": {
      "Type": "String",
      "Default": "'ALL'",
      "Description": "List of the names of AWS CodeCommit Repositories that will be monitored. Must be single-quoted and comma separated. For example, 'MyRepository1','MyRepository2'. To monitor all the repositories, leave default 'ALL' value."
    },
    "QuickSightPrincipalArn": {
      "Type": "String",
      "Default": "",
      "AllowedPattern": "^$|^arn:\\S+:quicksight:\\S+:\\d{12}:user/\\S+$",
      "ConstraintDescription": "Provide an arn matching an Amazon Quicksight User ARN. The input did not match the validation pattern.",
      "Description": "Provide a QuickSight ADMIN user ARN (arn:aws:quicksight:AWSRegion:AWSAccountId:user/default/QuickSightUserName) to automatically create QuickSight dashboards. QuickSight Enterprise edition must be enabled for the account. To disable QuickSight dashboards creation, leave it blank."
    },
    "DataDuration": {
      "Type": "Number",
      "Default": "90",
      "Description": "Enter a duration (days) that Athena query uses to retrieve data. By default Athena query retrieves data within the last 90 days. We recommend you to limit the duration for performance optimization and cost reduction."
    },
    "S3TransitionDays": {
      "Type": "Number",
      "Default": "365",
      "Description": "Enter the number of days after which you would like to transition Amazon S3 objects to Amazon S3 Glacier storage class. By default objects are transitioned to Glacier 365 days (one year) after creation."
    }
  },
  "Mappings": {
    "AnonymousData": {
      "SendAnonymousUsageData": {
        "Data": "Yes",
        "MetricsURL": "https://metrics.awssolutionsbuilder.com/generic"
      }
    },
    "UserAgentExtra": {
      "UserAgentExtra": {
        "Key": "AwsSolution/SO0143/v1.1.0"
      }
    }
  },
  "Conditions": {
    "AnonymousDataToAWS": {
      "Fn::Equals": [
        {
          "Fn::FindInMap": [
            "AnonymousData",
            "SendAnonymousUsageData",
            "Data"
          ]
        },
        "Yes"
      ]
    },
    "QuickSightCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "QuickSightPrincipalArn"
            },
            ""
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Resources": {
    "SolutionHelperHelperRole142364AA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "CloudWatchLogsPolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/SolutionHelper/HelperRole/Role/Resource"
      }
    },
    "SolutionHelper4825923B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "aws-devops-monitoring-dashboard/v1.1.0/asset240c284ba6fec9849e6742eb06b2f9e232797ebd0a53a2c3dadd3e137baa6ff8.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "SolutionHelperHelperRole142364AA",
            "Arn"
          ]
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function generates UUID for each deployment.",
        "Environment": {
          "Variables": {
            "UserAgentExtra": "AwsSolution/SO0143/v1.1.0"
          }
        },
        "Handler": "lambda_function.handler",
        "Runtime": "python3.8",
        "Timeout": 300
      },
      "DependsOn": [
        "SolutionHelperHelperRole142364AA"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC"
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency"
            }
          ]
        }
      }
    },
    "SolutionHelperCreateUniqueIDAF03406A": {
      "Type": "Custom::CreateUUID",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SolutionHelper4825923B",
            "Arn"
          ]
        },
        "Resource": "UUID"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/SolutionHelper/CreateUniqueID/Default"
      }
    },
    "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "aws-devops-metrics-logging-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID"
                ]
              }
            ]
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W35",
              "reason": "This S3 bucket is used as the access logging bucket for another bucket"
            }
          ]
        }
      }
    },
    "CodeCommitKinesisFirehoseToS3S3LoggingBucketPolicyA9B174C1": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/KinesisFirehoseToS3/S3LoggingBucket/Policy/Resource"
      }
    },
    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "aws-devops-metrics-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID"
                ]
              }
            ]
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "GLACIER",
                  "TransitionInDays": {
                    "Ref": "S3TransitionDays"
                  }
                }
              ],
              "Status": "Enabled"
            }
          ]
        },
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "CodeCommitKinesisFirehoseToS3S3LoggingBucketEBB86ACF"
          }
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/KinesisFirehoseToS3/S3Bucket/Resource"
      }
    },
    "CodeCommitKinesisFirehoseToS3S3BucketPolicy4E0BD5BE": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              },
              "Sid": "HttpsOnly"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/KinesisFirehoseToS3/S3Bucket/Policy/Resource"
      }
    },
    "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The CloudWatch log group does not need to be encrypted."
            },
            {
              "id": "W86",
              "reason": "The log data in CloudWatch log group does not need to be expired."
            }
          ]
        }
      }
    },
    "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/KinesisFirehoseToS3/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/KinesisFirehoseToS3/KinesisFirehoseRole/Resource"
      }
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC"
                    },
                    ":log-stream:",
                    {
                      "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "EventParserE8B3240E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "EventParserE8B3240E",
                          "Arn"
                        ]
                      },
                      ":$LATEST"
                    ]
                  ]
                }
              ],
              "Sid": "InvokeLambda"
            },
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                      },
                      "/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Sid": "glueAccessPSForFirehose"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C",
        "Roles": [
          {
            "Ref": "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/KinesisFirehoseToS3/KinesisFirehosePolicy/Resource"
      }
    },
    "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 300,
            "SizeInMBs": 64
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupD55CEEDC"
            },
            "LogStreamName": {
              "Ref": "CodeCommitKinesisFirehoseToS3firehoseloggroupfirehoselogstreamC9CAC73D"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": true,
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {
                  "CaseInsensitive": true
                }
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {
                  "Compression": "SNAPPY"
                }
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
              },
              "TableName": {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272",
                  "Arn"
                ]
              },
              "VersionId": "LATEST"
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "DevopsEventsProcessingErrorlogs/result=!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "DevopsEvents/created_at=!{timestamp:yyyy-MM-dd}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Type": "Lambda",
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "EventParserE8B3240E",
                        "Arn"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CodeCommitKinesisFirehoseToS3KinesisFirehoseRole1FE64272",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "CodeCommitKinesisFirehoseToS3KinesisFirehosePolicy7335C74C",
        "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/KinesisFirehoseToS3/KinesisFirehose"
      }
    },
    "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Events Rule To Kinesis Firehose Role"
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/EventsRuleInvokeKinesisFirehoseRole/Resource"
      }
    },
    "CodeCommitEventsRuleInvokeKinesisFirehosePolicy1498E6F5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "firehose:PutRecord",
                "firehose:PutRecordBatch"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeCommitEventsRuleInvokeKinesisFirehosePolicy1498E6F5",
        "Roles": [
          {
            "Ref": "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/EventsRuleInvokeKinesisFirehosePolicy/Resource"
      }
    },
    "CodeCommitEventsRule6F25533B": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for AWS CodeCommit",
        "EventPattern": {
          "detail-type": [
            "AWS API Call via CloudTrail"
          ],
          "source": [
            "aws.codecommit"
          ],
          "detail": {
            "eventName": [
              "PutFile",
              "DeleteFile",
              "UpdateFile",
              "GitPush"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn"
              ]
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeCommit/EventsRule/Resource"
      }
    },
    "CanaryEventsCanaryEventsRule115776A2": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for Amazon CloudWatch Synthetics Canary Alarm",
        "EventPattern": {
          "source": [
            "aws.cloudwatch"
          ],
          "detail-type": [
            "CloudWatch Alarm State Change"
          ],
          "detail": {
            "state": {
              "value": [
                "OK"
              ]
            },
            "previousState": {
              "value": [
                "ALARM"
              ]
            },
            "configuration": {
              "metrics": {
                "metricStat": {
                  "metric": {
                    "namespace": [
                      "CloudWatchSynthetics"
                    ]
                  }
                }
              }
            }
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn"
              ]
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CanaryEvents/CanaryEventsRule/Resource"
      }
    },
    "CodeDeployEventsCodeDeployEventsRule9A7B5DEA": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for AWS CodeDeploy",
        "EventPattern": {
          "source": [
            "aws.codedeploy"
          ],
          "detail-type": [
            "CodeDeploy Deployment State-change Notification"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn"
              ]
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeDeployEvents/CodeDeployEventsRule/Resource"
      }
    },
    "CodePipelineEventsCodePipelineEventsRuleB5CD4C2A": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for AWS CodePipeline",
        "EventPattern": {
          "source": [
            "aws.codepipeline"
          ],
          "detail-type": [
            "CodePipeline Action Execution State Change"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
                "Arn"
              ]
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "CodeCommitEventsRuleInvokeKinesisFirehoseRole1CA10D3E",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodePipelineEvents/CodePipelineEventsRule/Resource"
      }
    },
    "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF": {
      "Type": "AWS::Glue::Database",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseInput": {
          "Name": "aws_devops_metrics_db_so0143"
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/GlueAthenaDatabase/AWSDevopsMetricsGlueDatabase/Resource"
      }
    },
    "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
        },
        "TableInput": {
          "Description": "AWS DevOps Monitoring Dashboard Solution - AWS DevOps Metrics Glue table",
          "Name": "aws_devops_metrics_table",
          "Parameters": {
            "classification": "parquet",
            "has_encrypted_data": false,
            "EXTERNAL": "TRUE"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "version",
                "Type": "string"
              },
              {
                "Name": "id",
                "Type": "string"
              },
              {
                "Name": "detail_type",
                "Type": "string"
              },
              {
                "Name": "source",
                "Type": "string"
              },
              {
                "Name": "account",
                "Type": "string"
              },
              {
                "Name": "time",
                "Type": "timestamp"
              },
              {
                "Name": "region",
                "Type": "string"
              },
              {
                "Comment": "array<string>",
                "Name": "resources",
                "Type": "array<string>"
              },
              {
                "Comment": "struct<nested_column:datatype>",
                "Name": "detail",
                "Type": "struct<eventName:string,repositoryName:string,branchName:string,authorName:string,commitId:string,canaryAlarmName:string,canaryAlarmAppName:string,canaryAlarmRepoName:string,canaryAlarmCurrState:string,canaryAlarmPrevState:string,canaryAlarmCurrStateTimeStamp:timestamp,canaryAlarmPrevStateTimeStamp:timestamp,recoveryDurationMinutes:int,deploymentState:string,deploymentId:string,deploymentApplication:string,pipelineName:string,executionId:string,stage:string,action:string,state:string,externalExecutionId:string,actionCategory:string,actionOwner:string,actionProvider:string>"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                  },
                  "/DevopsEvents/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/GlueAthenaDatabase/AWSDevopsMetricsGlueTable/Table"
      }
    },
    "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
        },
        "TableInput": {
          "Description": "AWS DevOps Monitoring Dashboard Solution - AWS CodeBuild Metrics Glue table",
          "Name": "aws_codebuild_metrics_table",
          "Parameters": {
            "classification": "parquet",
            "has_encrypted_data": false,
            "EXTERNAL": "TRUE"
          },
          "PartitionKeys": [
            {
              "Name": "created_at",
              "Type": "timestamp"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "metric_stream_name",
                "Type": "string"
              },
              {
                "Name": "account_id",
                "Type": "string"
              },
              {
                "Name": "region",
                "Type": "string"
              },
              {
                "Name": "namespace",
                "Type": "string"
              },
              {
                "Name": "metric_name",
                "Type": "string"
              },
              {
                "Name": "dimensions",
                "Type": "struct<ProjectName:string,BuildId:string,BuildNumber:int>"
              },
              {
                "Name": "timestamp",
                "Type": "bigint"
              },
              {
                "Comment": "struct<nested_column:datatype>",
                "Name": "value",
                "Type": "struct<count:double,sum:double,max:double,min:double>"
              },
              {
                "Name": "unit",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                  },
                  "/CodeBuildEvents/"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": true
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/GlueAthenaDatabase/CodeBuildMetricsGlueTable/Table"
      }
    },
    "GlueAthenaDatabaseAWSDevOpsDashboardAthenaWorkGroupCA26D38C": {
      "Type": "AWS::Athena::WorkGroup",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              "AWSDevOpsDashboardWG-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID"
                ]
              }
            ]
          ]
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution Athena Work Group",
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "WorkGroupConfiguration": {
          "EngineVersion": {
            "SelectedEngineVersion": "Athena engine version 2"
          },
          "PublishCloudWatchMetricsEnabled": true,
          "ResultConfiguration": {
            "EncryptionConfiguration": {
              "EncryptionOption": "SSE_S3"
            },
            "OutputLocation": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                  },
                  "/athena_query_output/"
                ]
              ]
            }
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/GlueAthenaDatabase/AWSDevOpsDashboardAthenaWorkGroup"
      }
    },
    "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  },
                  "Sid": "CreateCWLogs"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "CodeBuildEventParserLambdaPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID"
                    ]
                  }
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeBuildEvents/CodeBuildEventParserLambdaRole/Resource"
      }
    },
    "CodeBuildEventsCodeBuildEventParserBA00AD10": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "aws-devops-monitoring-dashboard/v1.1.0/asseta9be94efe7f7cb3336668519e8f5968a8ed6f0b9b42631b40a8fbc4a6ee78a72.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD",
            "Arn"
          ]
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function performs lambda transformation within kinesis firehose. It parses CloudWatch metrics for CodeBuild, sends relevant data to S3 for downstream operation",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "UserAgentExtra": {
              "Fn::FindInMap": [
                "UserAgentExtra",
                "UserAgentExtra",
                "Key"
              ]
            }
          }
        },
        "Handler": "codebuild_index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 900
      },
      "DependsOn": [
        "CodeBuildEventsCodeBuildEventParserLambdaRole6077AACD"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC"
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency"
            }
          ]
        }
      }
    },
    "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The CloudWatch log group does not need to be encrypted."
            },
            {
              "id": "W86",
              "reason": "The log data in CloudWatch log group does not need to be expired."
            }
          ]
        }
      }
    },
    "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeBuildEvents/CodeBuild/firehose-log-group/firehose-log-stream/Resource"
      }
    },
    "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeBuildEvents/CodeBuild/KinesisFirehoseRole/Resource"
      }
    },
    "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":log-group:",
                    {
                      "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5"
                    },
                    ":log-stream:",
                    {
                      "Ref": "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CodeBuildEventsCodeBuildEventParserBA00AD10",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CodeBuildEventsCodeBuildEventParserBA00AD10",
                          "Arn"
                        ]
                      },
                      ":$LATEST"
                    ]
                  ]
                }
              ],
              "Sid": "InvokeLambda"
            },
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                      },
                      "/",
                      {
                        "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Sid": "glueAccessPSForCodeBuildEventsFirehose"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F",
        "Roles": [
          {
            "Ref": "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeBuildEvents/CodeBuild/KinesisFirehosePolicy/Resource"
      }
    },
    "CodeBuildEventsCodeBuildKinesisFirehose48AE2746": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamEncryptionConfigurationInput": {
          "KeyType": "AWS_OWNED_CMK"
        },
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 300,
            "SizeInMBs": 64
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "CodeBuildEventsCodeBuildfirehoseloggroup37533DE5"
            },
            "LogStreamName": {
              "Ref": "CodeBuildEventsCodeBuildfirehoseloggroupfirehoselogstreamEEA2FA4F"
            }
          },
          "CompressionFormat": "UNCOMPRESSED",
          "DataFormatConversionConfiguration": {
            "Enabled": true,
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {
                  "CaseInsensitive": true
                }
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {
                  "Compression": "SNAPPY"
                }
              }
            },
            "SchemaConfiguration": {
              "DatabaseName": {
                "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
              },
              "TableName": {
                "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC",
                  "Arn"
                ]
              }
            }
          },
          "EncryptionConfiguration": {
            "KMSEncryptionConfig": {
              "AWSKMSKeyARN": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kms:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":alias/aws/s3"
                  ]
                ]
              }
            }
          },
          "ErrorOutputPrefix": "CodeBuildEventsProcessingErrorlogs/result=!{firehose:error-output-type}/created_at=!{timestamp:yyyy-MM-dd}/",
          "Prefix": "CodeBuildEvents/created_at=!{timestamp:yyyy-MM-dd}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Type": "Lambda",
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "CodeBuildEventsCodeBuildEventParserBA00AD10",
                        "Arn"
                      ]
                    }
                  }
                ]
              }
            ]
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "CodeBuildEventsCodeBuildKinesisFirehoseRole28E73FBC",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "CodeBuildEventsCodeBuildKinesisFirehosePolicy928AD09F"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeBuildEvents/CodeBuild/KinesisFirehose"
      }
    },
    "CodeBuildEventsCloudWatchMetricStreamRole047DA47A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "streams.metrics.cloudwatch.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "firehose:PutRecord",
                    "firehose:PutRecordBatch"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "CodeBuildEventsCodeBuildKinesisFirehose48AE2746",
                      "Arn"
                    ]
                  },
                  "Sid": "FirehosePutRecordPS"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "FirehosePutRecord-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID"
                    ]
                  }
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeBuildEvents/CloudWatchMetricStreamRole/Resource"
      }
    },
    "CodeBuildEventsCloudWatchMetricStreamB26149A1": {
      "Type": "AWS::CloudWatch::MetricStream",
      "Properties": {
        "FirehoseArn": {
          "Fn::GetAtt": [
            "CodeBuildEventsCodeBuildKinesisFirehose48AE2746",
            "Arn"
          ]
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "CodeBuildEventsCloudWatchMetricStreamRole047DA47A",
            "Arn"
          ]
        },
        "IncludeFilters": [
          {
            "Namespace": "AWS/CodeBuild"
          }
        ],
        "OutputFormat": "json"
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CodeBuildEvents/CloudWatchMetricStream"
      }
    },
    "EventParserLambdaRole3A607F90": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  },
                  "Sid": "CreateCWLogs"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "EventParserLambdaPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID"
                    ]
                  }
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/EventParserLambdaRole/Resource"
      }
    },
    "EventParserE8B3240E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "aws-devops-monitoring-dashboard/v1.1.0/asseta9be94efe7f7cb3336668519e8f5968a8ed6f0b9b42631b40a8fbc4a6ee78a72.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "EventParserLambdaRole3A607F90",
            "Arn"
          ]
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function performs lambda transformation within kinesis firehose. It parses raw cloudwatch events, sends relevant data to S3 for downstream operation",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 900
      },
      "DependsOn": [
        "EventParserLambdaRole3A607F90"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC"
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency"
            }
          ]
        }
      }
    },
    "queryRunnerLambdaRoleB4DE757D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  },
                  "Sid": "CreateCWLogs"
                },
                {
                  "Action": [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:AbortMultipartUpload",
                    "s3:CreateBucket",
                    "s3:PutObject"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                          },
                          "/athena_results/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                          },
                          "/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::aws-athena-query-results-*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::query-results-custom-bucket"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::query-results-custom-bucket/*"
                        ]
                      ]
                    }
                  ],
                  "Sid": "s3AccessPSwAthena"
                },
                {
                  "Action": "athena:StartQueryExecution",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":athena:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":workgroup/AWSDevOpsDashboard*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":athena:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":workgroup/primary"
                        ]
                      ]
                    }
                  ],
                  "Sid": "AthenaQueryExecutionPS"
                },
                {
                  "Action": [
                    "glue:GetTable",
                    "glue:GetPartitions",
                    "glue:GetDatabase",
                    "glue:CreateTable",
                    "glue:UpdateTable",
                    "glue:BatchCreatePartition",
                    "glue:DeleteTable",
                    "glue:DeletePartition"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":catalog"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":database/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                          },
                          "/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                          },
                          "/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                          },
                          "/",
                          {
                            "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0"
                          }
                        ]
                      ]
                    }
                  ],
                  "Sid": "glueAccessPS"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "queryRunnerLambdaPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID"
                    ]
                  }
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/queryRunnerLambdaRole/Resource"
      }
    },
    "QueryRunner0586B77B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "aws-devops-monitoring-dashboard/v1.1.0/assetb24aaa2b5d415cd863db7121331bc57708bd3e68d419bd571b1a98d934ccf4db.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "queryRunnerLambdaRoleB4DE757D",
            "Arn"
          ]
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function runs Amazon Athena queries and creates views.",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 300
      },
      "DependsOn": [
        "queryRunnerLambdaRoleB4DE757D"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W89",
              "reason": "There is no need to run this lambda in a VPC"
            },
            {
              "id": "W92",
              "reason": "There is no need for Reserved Concurrency"
            }
          ]
        }
      }
    },
    "CustomResourceQueryRunner": {
      "Type": "Custom::QueryRunner",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "QueryRunner0586B77B",
            "Arn"
          ]
        },
        "MetricsDBName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
        },
        "MetricsTableName": {
          "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1"
        },
        "CodeBuildMetricsTableName": {
          "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0"
        },
        "AthenaWorkGroup": {
          "Fn::Join": [
            "",
            [
              "AWSDevOpsDashboardWG-",
              {
                "Fn::GetAtt": [
                  "SolutionHelperCreateUniqueIDAF03406A",
                  "UUID"
                ]
              }
            ]
          ]
        },
        "RepositoryList": {
          "Ref": "CodeCommitRepo"
        },
        "DataDuration": {
          "Ref": "DataDuration"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CustomResourceQueryRunner/Default"
      }
    },
    "SendAnonymousUsageData": {
      "Type": "Custom::SendAnonymousUsageData",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "QueryRunner0586B77B",
            "Arn"
          ]
        },
        "SendAnonymousUsageData": {
          "Fn::FindInMap": [
            "AnonymousData",
            "SendAnonymousUsageData",
            "Data"
          ]
        },
        "SolutionId": "SO0143",
        "UUID": {
          "Fn::GetAtt": [
            "SolutionHelperCreateUniqueIDAF03406A",
            "UUID"
          ]
        },
        "Version": "v1.1.0",
        "Region": {
          "Ref": "AWS::Region"
        },
        "MetricsURL": {
          "Fn::FindInMap": [
            "AnonymousData",
            "SendAnonymousUsageData",
            "MetricsURL"
          ]
        },
        "QuickSightPrincipalArn": {
          "Ref": "QuickSightPrincipalArn"
        },
        "AthenaQueryDataDuration": {
          "Ref": "DataDuration"
        },
        "RepositoryList": {
          "Ref": "CodeCommitRepo"
        },
        "S3TransitionDays": {
          "Ref": "S3TransitionDays"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/SendAnonymousUsageData/Default"
      },
      "Condition": "AnonymousDataToAWS"
    },
    "AddAthenaPartitionLambdaRoleA28EF3C7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  },
                  "Sid": "CreateCWLogs"
                },
                {
                  "Action": [
                    "s3:GetBucketLocation",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "s3:ListBucketMultipartUploads",
                    "s3:ListMultipartUploadParts",
                    "s3:AbortMultipartUpload",
                    "s3:CreateBucket",
                    "s3:PutObject"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                          },
                          "/athena_results/*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":s3:::",
                          {
                            "Ref": "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ],
                  "Sid": "S3AccessPS"
                },
                {
                  "Action": "athena:StartQueryExecution",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":athena:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":workgroup/AWSDevOpsDashboard*"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":athena:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":workgroup/primary"
                        ]
                      ]
                    }
                  ],
                  "Sid": "AthenaQueryExecutionPS"
                },
                {
                  "Action": [
                    "glue:GetTable",
                    "glue:GetPartitions",
                    "glue:GetDatabase",
                    "glue:CreateTable",
                    "glue:UpdateTable",
                    "glue:BatchCreatePartition"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":catalog"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":database/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                          },
                          "/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1"
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":glue:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":table/",
                          {
                            "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ],
                  "Sid": "glueAccessPS"
                },
                {
                  "Action": "cloudwatch:GetMetricStatistics",
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "cloudwatchAccessPS"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": {
              "Fn::Join": [
                "",
                [
                  "AddAthenaPartitionPolicy-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID"
                    ]
                  }
                ]
              ]
            }
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W11",
              "reason": "Resource * is required for cloudwatch:GetMetricStatistics as it does not support resource-level permissions."
            }
          ]
        }
      }
    },
    "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD",
        "Roles": [
          {
            "Ref": "AddAthenaPartitionLambdaRoleA28EF3C7"
          }
        ]
      },
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC."
            }
          ]
        }
      }
    },
    "AddAthenaPartitionLambdaFunctionServiceRole34D9F028": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/AddAthenaPartition/LambdaFunctionServiceRole/Resource"
      }
    },
    "AddAthenaPartitionLambdaFunction02003486": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "aws-devops-monitoring-dashboard/v1.1.0/assetb24aaa2b5d415cd863db7121331bc57708bd3e68d419bd571b1a98d934ccf4db.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "AddAthenaPartitionLambdaRoleA28EF3C7",
            "Arn"
          ]
        },
        "Description": "AWS DevOps Monitoring Dashboard Solution - This function runs on a daily schedule and adds a new partition to Amazon Athena table",
        "Environment": {
          "Variables": {
            "LOG_LEVEL": "INFO",
            "MetricsDBName": {
              "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueDatabaseB82980FF"
            },
            "MetricsTableName": {
              "Ref": "GlueAthenaDatabaseAWSDevopsMetricsGlueTable4661F2E1"
            },
            "CodeBuildMetricsTableName": {
              "Ref": "GlueAthenaDatabaseCodeBuildMetricsGlueTableE0ED7BB0"
            },
            "AthenaWorkGroup": {
              "Fn::Join": [
                "",
                [
                  "AWSDevOpsDashboardWG-",
                  {
                    "Fn::GetAtt": [
                      "SolutionHelperCreateUniqueIDAF03406A",
                      "UUID"
                    ]
                  }
                ]
              ]
            },
            "SolutionId": "SO0143",
            "UUID": {
              "Fn::GetAtt": [
                "SolutionHelperCreateUniqueIDAF03406A",
                "UUID"
              ]
            },
            "Region": {
              "Ref": "AWS::Region"
            },
            "Version": "v1.1.0",
            "SendAnonymousUsageData": {
              "Fn::FindInMap": [
                "AnonymousData",
                "SendAnonymousUsageData",
                "Data"
              ]
            },
            "MetricsURL": {
              "Fn::FindInMap": [
                "AnonymousData",
                "SendAnonymousUsageData",
                "MetricsURL"
              ]
            },
            "UserAgentExtra": {
              "Fn::FindInMap": [
                "UserAgentExtra",
                "UserAgentExtra",
                "Key"
              ]
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "add_athena_partition.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 300,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "AddAthenaPartitionLambdaRoleDefaultPolicyBA8B41CD",
        "AddAthenaPartitionLambdaRoleA28EF3C7"
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions."
            },
            {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries"
            },
            {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients"
            }
          ]
        }
      }
    },
    "AddAthenaPartitionLambdaFunctionAwsEventsLambdaInvokePermission19FEC65E3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AddAthenaPartitionLambdaFunction02003486",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "AddAthenaPartitionEventsRule8E73AEE0",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/AddAthenaPartition/LambdaFunction/AwsEventsLambdaInvokePermission-1"
      }
    },
    "AddAthenaPartitionEventsRule8E73AEE0": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "AWS DevOps Monitoring Dashboard Solution - Event rule for adding Athena partitions",
        "ScheduleExpression": "cron(0 0 * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AddAthenaPartitionLambdaFunction02003486",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/AddAthenaPartition/EventsRule/Resource"
      }
    },
    "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://solutions-reference.s3.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              "aws-devops-monitoring-dashboard/v1.1.0/awsdevopsmonitoringdashboardQSDashboardE60C2715.nested.template"
            ]
          ]
        },
        "Parameters": {
          "QuickSightSourceTemplateArn": "arn:aws:quicksight:us-east-1:898061675696:template/solutions_aws-devops-monitoring-dashboard_v1_1_0",
          "QuickSightPrincipalArn": {
            "Ref": "QuickSightPrincipalArn"
          },
          "SolutionID": "SO0143",
          "SolutionName": "AWS DevOps Monitoring Dashboard",
          "SolutionVersion": "v1.1.0",
          "ParentStackName": {
            "Ref": "AWS::StackName"
          },
          "AthenaWorkGroupName": {
            "Fn::Join": [
              "",
              [
                "AWSDevOpsDashboardWG-",
                {
                  "Fn::GetAtt": [
                    "SolutionHelperCreateUniqueIDAF03406A",
                    "UUID"
                  ]
                }
              ]
            ]
          }
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/QSDashboard.NestedStack/QSDashboard.NestedStackResource",
        "nestedStackFileName": "awsdevopsmonitoringdashboardQSDashboardE60C2715.nested.template"
      },
      "Condition": "QuickSightCondition",
      "Description": "(SO0143)AWS DevOps Monitoring Dashboard - Create QuickSight Template. Version: v1.1.0"
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAA22RTU/DMAyGfwv3NGMCJLgB4+MAiGmbxDlLvS60jac4GUJR/ztOUsYEnPzafms/daby6lKenlyrD6qirttJ1OhAxqVXuhWzjZ0rp3rw4FLyonY7Y5skZ2hr4w1awYq8C9qLGyLw/GWTPAsgDE6DmAXy2P+kG3usD4teg98FP4hMYlQv4wK7Yk9xjp3Rn5koq0F0ql/XSsaHYHUB2dhjPQfXGyLOBkFnlUpwJDMj5zLeBt2yZOeoSvhZdJzzOmxIxmdsHh2GXeofNIuld6D6sVqSQbTGAhnaGAdbJJDcvYPO7MF9jn7Yg2WouAjjr3IcRNMFfoI75dVaUa4f9EqtizMLvpbfglVp8hu6tuDoDkP9obzepvoLeGf0iMSXwC6kC1Glv9+NJvnmhaVyjFDFX+gVH+w+9xPhCp9K+2Fsr3B59v0ex7bnXPpziDTtnwlMZ7EG+U6T/fRcTi/k+ck7GcNI1pse5KLEL7KwJtG0AgAA"
      },
      "Metadata": {
        "aws:cdk:path": "aws-devops-monitoring-dashboard/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "QSAnalysisURL": {
      "Description": "Amazon QuickSight Analysis URL for AWS DevOps Monitoring Dashboard Solution",
      "Value": {
        "Fn::GetAtt": [
          "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359",
          "Outputs.awsdevopsmonitoringdashboardQSDashboardQuicksightQuickSightResourcesC5BCF60Eanalysisurl"
        ]
      },
      "Condition": "QuickSightCondition"
    },
    "QSDashboardURL": {
      "Description": "Amazon QuickSight Dashboard URL for AWS DevOps Monitoring Dashboard Solution",
      "Value": {
        "Fn::GetAtt": [
          "QSDashboardNestedStackQSDashboardNestedStackResourceF5171359",
          "Outputs.awsdevopsmonitoringdashboardQSDashboardQuicksightQuickSightResourcesC5BCF60Edashboardurl"
        ]
      },
      "Condition": "QuickSightCondition"
    },
    "KinesisFirehoseDeliveryStream": {
      "Description": "Kinesis Firehose Delivery Stream for AWS DevOps Monitoring Dashboard Solution",
      "Value": {
        "Fn::GetAtt": [
          "CodeCommitKinesisFirehoseToS3KinesisFirehoseD3B823A8",
          "Arn"
        ]
      }
    },
    "EventParserLambdaFunction": {
      "Description": "Event Parser Lambda Function for AWS DevOps Monitoring Dashboard Solution",
      "Value": {
        "Fn::GetAtt": [
          "EventParserE8B3240E",
          "Arn"
        ]
      }
    },
    "QueryRunnerLambdaFunction": {
      "Description": "Query Runner Lambda Function for AWS DevOps Monitoring Dashboard Solution",
      "Value": {
        "Fn::GetAtt": [
          "QueryRunner0586B77B",
          "Arn"
        ]
      }
    },
    "DevOpsMetricsS3Bucket": {
      "Description": "DevOps Metrics S3 Bucket for AWS DevOps Monitoring Dashboard Solution",
      "Value": {
        "Fn::GetAtt": [
          "CodeCommitKinesisFirehoseToS3S3BucketDD1D151C",
          "Arn"
        ]
      }
    },
    "SolutionVersion": {
      "Description": "Version for AWS DevOps Monitoring Dashboard Solution",
      "Value": "v1.1.0"
    }
  }
}